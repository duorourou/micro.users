buildscript {
	ext {
		springBootVersion = '1.5.6.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	jcenter()
}


ext {
	springCloudVersion = 'Dalston.SR2'
}

dependencies {
	compile('org.springframework.cloud:spring-cloud-starter-eureka')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
//	compile('mysql:mysql-connector-java:6.0.6')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.projectlombok:lombok:1.16.18')
	compile('io.vertx:vertx-core:3.4.2')
	compile('io.vertx:vertx-platform:2.1.6')
	compile('com.github.aesteve:nubes:1.3')
	runtime('mysql:mysql-connector-java')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

group = 'duorr'

jar {
	baseName = "micro_users"
}

task buildDocker(type: Docker, dependsOn: build) {
	applicationName = jar.baseName
	dockerfile = file('Dockerfile')
	doFirst {
		copy {
			from jar
			into "${stageDir}/target"
			rename("micro_users-${version}.jar", "app.jar")
		}
	}
}

//configurations {
//	compile.exclude module: 'spring-boot-starter-tomcat'
//	compile.exclude group: 'org.apache.tomcat'
//}
